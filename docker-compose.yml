services:
  db:
    image: postgres:14
    container_name: novartis_db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_MULTIPLE_DATABASES: novartis,novartis_test
    ports:
      - "5433:5432"
    volumes:
      - ./database/multiple_db.sh:/docker-entrypoint-initdb.d/multiple_db.sh
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: novartis_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/novartis
      - TEST_DATABASE_URL=postgresql://postgres:postgres@db:5432/novartis_test
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
    command: ["sh", "-c", "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"]

  frontend:
    container_name: novartis_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/share/nginx/html

volumes:
  postgres_data: